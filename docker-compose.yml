version: '3.9'

x-pandaria-shared-conf: &pandaria-shared-conf
  environment:
      - TZ=Asia/Shanghai
  volumes:
    - "/etc/localtime:/etc/localtime:ro"
    - "/etc/timezone:/etc/timezone:ro"
    - "./build:/opt/build:rw"
    - "vl-client-data:/opt/server/data:ro"
    - "${WOW_PATH}:/opt/wow:rw"
  restart: unless-stopped
  tty: true

x-build-shared-conf: &build-shared-conf
  dockerfile: Dockerfile
  args:
    USER_ID: ${USER_ID:-0}
    GROUP_ID: ${GROUP_ID:-0}

services:
  clientdata:
    image: yusiwen/pandaria-clientdata:${VERSION:-5.4.8-dev}
    container_name: pandaria-clientdata
    build:
      context: .
      dockerfile: containers/clientdata/Dockerfile
      <<: *build-shared-conf
    volumes:
      - vl-client-data:/opt/server/data
    command: ["sleep","infinity"]

  authserver:
    image: yusiwen/pandaria-authserver:${VERSION:-5.4.8-dev}
    container_name: pandaria-authserver
    build:
      context: .
      dockerfile: containers/authserver/Dockerfile
      <<: *build-shared-conf
    <<: *pandaria-shared-conf
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "3724:3724"
  
  worldserver:
    image: yusiwen/pandaria-worldserver:${VERSION:-5.4.8-dev}
    container_name: pandaria-worldserver
    build:
      context: .
      dockerfile: containers/worldserver/Dockerfile
      <<: *build-shared-conf
    <<: *pandaria-shared-conf
    stdin_open: true
    depends_on:
      database:
        condition: service_healthy
      clientdata:
        condition: service_started
    ports:
      - "3443:3443"
      - "8085:8085"
    # - "8086:8086"

  compile:
    image: yusiwen/pandaria-compiler:${VERSION:-5.4.8-dev}
    env_file:
      - ./env/compile.env
      - ./env/mariadb.env
    container_name: pandaria-compile
    build:
      context: containers/compile
      <<: *build-shared-conf
    <<: *pandaria-shared-conf
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "./build:/opt/build:rw"
    restart: "no"
    profiles:
      - compile

  extractor:
    image: yusiwen/pandaria-extractor:${VERSION:-5.4.8-dev}
    container_name: pandaria-extractor
    build:
      context: containers/extractor
      <<: *build-shared-conf
    <<: *pandaria-shared-conf
    volumes:
      - "/tmp:/tmp"
      - "./server:/opt/server:rw"
      - "${WOW_PATH}:/opt/wow:rw"
    privileged: true
    ulimits:
      core: -1
    restart: "no"
    profiles:
      - extractor

  database:
    image: yusiwen/pandaria-database:${VERSION:-5.4.8-dev}
    env_file:
      - ./env/mariadb.env
    container_name: pandaria-database
    hostname: pandariadb
    build:
      context: containers/mariadb
      <<: *build-shared-conf
    <<: *pandaria-shared-conf
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "./server/db:/var/lib/mysql:rw"
      - "./backup:/backup/mysql:rw"
      - "./build:/opt/build:rw"
    healthcheck:
      test: '/usr/bin/mysql --user=root --password=$$MYSQL_ROOT_PASSWORD --execute "SHOW DATABASES;"'
      interval: 2s
      timeout: 40s
      retries: 20
    command: --max_allowed_packet=32505856
    # ports:
    #  - "3306:3306"

  phpmyadmin:
    image: phpmyadmin
    ports:
      - "8080:80"
    environment:
      - PMA_HOST=pandariadb
      - PMA_USER=root
      - PMA_PASSWORD=pwd
    restart: "no"
    depends_on:
      database:
        condition: service_healthy
    profiles:
      - dev

networks:
  default:
    name: pandaria-network

volumes:
  vl-client-data:
